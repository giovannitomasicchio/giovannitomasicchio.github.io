<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Corso PHP base on Giovanni Tomasicchio</title><link>https://www.giovannitomasicchio.it/categories/corso-php-base/</link><description>Recent content in Corso PHP base on Giovanni Tomasicchio</description><generator>Hugo -- gohugo.io</generator><language>it-IT</language><lastBuildDate>Wed, 13 Jul 2005 22:36:20 +0000</lastBuildDate><atom:link href="https://www.giovannitomasicchio.it/categories/corso-php-base/index.xml" rel="self" type="application/rss+xml"/><item><title>include - require - exit</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/include-require-exit/</link><pubDate>Wed, 13 Jul 2005 22:36:20 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/include-require-exit/</guid><description>include - require Quando si realizzano applicazioni PHP di una certa complessità è naturale ritrovarsi con degli script composto da centinaia o addirittura migliaia di righe di codice, enormi files nei quali è facile perdersi. Le operazioni di modifica e manutenzione del codice diventano così sempre più onerose, si perde tempo anche a cercare quale sia la corretta riga su cui intervenire.
Un&amp;rsquo;altra inefficienza insita nella realizzazione di script monolitici, composti cioè da un unico file, sta nel fatto che spesso ci si ritrova a dover scrivere sempre le stesse sequenze di istruzioni.</description></item><item><title>Le funzioni personalizzate - II</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/le-funzioni-personalizzate-ii/</link><pubDate>Wed, 13 Jul 2005 22:36:03 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/le-funzioni-personalizzate-ii/</guid><description>parametri di default Spesso capita di realizzare delle funzioni che accettano uno o più parametri ma alcuni di questi assumono quasi sempre lo stesso valore. Il PHP ci permette di assegnare ad essi un valore di default (predefinito) che verrà utilizzato ogni qualvolta tale parametro non sarà specificato nella chiamata della funzione.
Supponiamo ad esempio di dover realizzare una funzione che crei una descrizione di un film. Passeremo come parametri il titolo del film, il regista, l&amp;rsquo;anno e una indicazione &amp;lsquo;bianco e nero&amp;rsquo; o &amp;lsquo;a colori&amp;rsquo;.</description></item><item><title>Le funzioni personalizzate - I</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/le-funzioni-personalizzate-i/</link><pubDate>Wed, 13 Jul 2005 22:35:43 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/le-funzioni-personalizzate-i/</guid><description>Il PHP mette a disposizione dei nostri script una miriade di funzioni che possiamo impiegare nelle situazioni più disparate. Nonostante ciò ci si trova spesso nella necessità di dover risolvere determinati problemi personalmente, senza cioè poter contare su una funzione PHP già pronta.
Ad esempio se vogliamo mostrare un testo in grassetto o in corsivo non possiamo confidare su una funzione PHP ma dovremo inserire manualmente i tag HTML opportuni. In generale questo non è un problema ma lo può diventare se la pagina da realizzare richiede diverse stringhe in grassetto:</description></item><item><title>L'array $_GET - dati via URL</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/larray-$_get-dati-via-url/</link><pubDate>Wed, 13 Jul 2005 22:35:25 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/larray-$_get-dati-via-url/</guid><description>Probabilmente avrete già notato che alcuni link presenti nei siti web puntano ad indirizzi (URL) piuttosto complessi che accodano al nome della pagina da visualizzare anche una serie di parametri. Ad esempio il link http://www.phpnews.it/forum/index.php?board=1.0 porta al nostro forum PHP. E' evidente che questo URL si riferisce allo script &amp;ldquo;index.php&amp;rdquo; ma notiamo anche il testo &amp;ldquo;?board=1.0&amp;rdquo;.
Questa parte dell&amp;rsquo;indirizzo si chiamata query string ed ha lo scopo di conservare delle informazioni da passare allo script chiamato.</description></item><item><title>I form e l'array $_POST</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/i-form-e-larray-$_post/</link><pubDate>Wed, 13 Jul 2005 22:35:08 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/i-form-e-larray-$_post/</guid><description>Già dalle prime lezioni abbiamo subito imparato a mostrare, con la funzione echo, dei messaggi all&amp;rsquo;utente ovvero a generare un output. Adesso vediamo invece come acquisire informazioni dagli utenti, a gestire cioè l'input dell&amp;rsquo;utente. Un sito web interattivo deve saper raccogliere dai suoi visitatori dati di diversa natura e per gli scopi più disparati.
Pensate ad esempio ad un forum ed alle attività ad esso collegate: registrazione, log-in, invio messaggi, ecc.</description></item><item><title>Cicli e iterazioni: break e continue</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/cicli-e-iterazioni-break-e-continue/</link><pubDate>Wed, 13 Jul 2005 22:34:49 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/cicli-e-iterazioni-break-e-continue/</guid><description>break Abbiamo visto che ogni struttura per la realizzazione di cicli (for, foreach, while, do-while) utilizza una condizione per decidere se continuare le iterazioni o interrompersi. PHP comunque mette a disposizione il comando break per effettuare una terminazione prematura di queste esecuzioni:
&amp;lt;?php $colori = array(&amp;#39;bianco&amp;#39;,&amp;#39;nero&amp;#39;,&amp;#39;rosso&amp;#39;,&amp;#39;verde&amp;#39;,&amp;#39;blu&amp;#39;,&amp;#39;giallo&amp;#39;); $trovato = false; $colore_cercato = &amp;#39;verde&amp;#39;; foreach ($colori as $colore) { // se trovo il colore cercato... if($colore == $colore_cercato) { // memorizzo il successo della ricerca ed arresto il ciclo $trovato = true; break; } } if($trovato) echo &amp;#34;Il colore &amp;#39;$colore_cercato&amp;#39; è nell&amp;#39;array&amp;#34;; else echo &amp;#34;Il colore &amp;#39;$colore_cercato&amp;#39; non è stato trovato nell&amp;#39;array&amp;#34;; ?</description></item><item><title>Cicli e iterazioni: while e do-while</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/cicli-e-iterazioni-while-e-do-while/</link><pubDate>Wed, 13 Jul 2005 22:34:27 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/cicli-e-iterazioni-while-e-do-while/</guid><description>while A volte serve semplicemente ripetere un gruppo di istruzioni finché una determinata condizione è soddisfatta. Quando tale condizione non è più verificata le iterazioni devono essere interrotte. Questo è proprio quello che fa il ciclo while che si presenta con una sintassi del tipo:
while(condizione) { // istruzioni da iterare } dove l&amp;rsquo;espressione condizione viene valutata all&amp;rsquo;inizio di ogni iterazione. Se assume il valore true allora sarà eseguito il gruppo di istruzioni da iterare, altrimenti il ciclo verrà interrotto.</description></item><item><title>Cicli e iterazioni: for e foreach</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/cicli-e-iterazioni-for-e-foreach/</link><pubDate>Wed, 13 Jul 2005 22:34:09 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/cicli-e-iterazioni-for-e-foreach/</guid><description>Avete presente la pagina principale di PHPnews.it? Nella colonna centrale sono presenti le ultime 10 news. Ciascuna è composta da un titolo, il testo della news e la data di pubblicazione. Sicuramente lo script PHP che si occupa di costruire questa pagina avrà delle istruzioni dedicate alla visualizzazione di una singola news. Fortunatamente per visualizzare 10 news non è necessario ricopiare tali righe per 10 volte nello script, è sufficiente invece istruire il PHP affinché la loro esecuzione venga ripetuta 10 volte.</description></item><item><title>La conversione automatica dei tipi: il cast</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/la-conversione-automatica-dei-tipi-il-cast/</link><pubDate>Wed, 13 Jul 2005 22:33:53 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/la-conversione-automatica-dei-tipi-il-cast/</guid><description>Quello che stiamo per affrontare è probabilmente uno degli argomenti più &amp;ldquo;oscuri&amp;rdquo; nella programmazione PHP spesso ignorato anche dai programmatori con una certa esperienza. Perché allora dovremmo parlarne? Principalmente per 2 motivi. Se infatti conoscete già altri linguaggi (ad esempio C, C++, Java, VisualBasic, Pascal) alcuni comportamenti di PHP vi sembreranno alquanto anomali ed inspiegabili rispetto a ciò che è stato il vostro modo di programmare fino a questo momento. Ed anche se siete alle prime armi è importante conoscere questo argomento in modo da non incorrere in errori che sembrerebbero inspiegabili.</description></item><item><title>Gli operatori</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/gli-operatori/</link><pubDate>Wed, 13 Jul 2005 22:33:23 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/gli-operatori/</guid><description>La struttura if introdotta nella scorsa lezione ci ha portato a parlare di operatori. Cerchiamo adesso di approfondire l&amp;rsquo;argomento poiché il loro corretto utilizzo è fondamentale anche nei più semplici script PHP. Questa lezione potrebbe risultare particolarmente noiosa e per certi aspetti anche ostica. I concetti che vedremo però sono importanti anche per una corretta comprensione delle prossimi argomenti.
Operatori aritmetici Gli operatori aritmetici sono quelli che usiamo comunemente per effettuare le operazioni matematiche:</description></item><item><title>if e switch: la gestione del flusso</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/if-e-switch-la-gestione-del-flusso/</link><pubDate>Wed, 13 Jul 2005 22:33:06 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/if-e-switch-la-gestione-del-flusso/</guid><description>Gli esempi visti finora erano composti da una sequenza di istruzioni da eseguire una dopo l&amp;rsquo;altra, dalla prima all&amp;rsquo;ultima. Raggiunta la fine dello script il PHP ci ha mostrato i risultati di tale esecuzione. Il flusso del programma, ovvero l&amp;rsquo;ordine di esecuzione delle istruzioni, procedeva quindi in maniera lineare.
Ci sono però diverse situazioni in cui questo modo di procedere non va bene. Immaginiamo ad esempio di dover realizzare una pagina web in cui gli utenti registrati possono scaricare un certo file mentre gli utenti non registrati devono ricevere un avviso.</description></item><item><title>true e false - le variabili booleane</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/true-e-false-le-variabili-booleane/</link><pubDate>Wed, 13 Jul 2005 22:32:49 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/true-e-false-le-variabili-booleane/</guid><description>Dopo aver studiato gli array, sicuramente il tipo di dati più complesso ed articolato del PHP, analizziamo adesso quello più semplice: il tipo booleano. Non fatevi spaventare dalla parola, si tratta semplicemente di un tipo di dato che può assumere soltanto 2 valori: vero e falso.
Capita spesso di dover memorizzare in una variabile se un determinato evento è accaduto o meno. Ad esempio se un utente ha effettuato il log-in, oppure se i dati che ha inserito sono corretti ecc.</description></item><item><title>Gli array</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/gli-array/</link><pubDate>Wed, 13 Jul 2005 22:32:31 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/gli-array/</guid><description>Quando abbiamo parlato delle variabili abbiamo detto che queste sono come dei contenitori nei quali è possibile conservare un valore, ad esempio un numero o una stringa. In realtà il PHP permette di memorizzare in una variabile anche più di un valore. Questo tipo di variabile si chiama array. Ma qual&amp;rsquo;è lo scopo di tutto ciò?
Supponiamo di dover realizzare un sito che mostra le recensioni di alcuni film. Ogni film avrà un titolo, il nome del regista, i nomi degli attori principali ed una descrizione.</description></item><item><title>Le stringhe</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/le-stringhe/</link><pubDate>Wed, 13 Jul 2005 22:32:16 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/le-stringhe/</guid><description>Il PHP è un linguaggio progettato e realizzato per il web. Non sorprende quindi che risulti veramente potente nella gestione dei testi: una pagina web non è forse un testo contenente HTML?
E' per questo motivo che vale la pena ora soffermarci su come PHP gestisce le stringhe. Iniziamo con un esempio:
&amp;lt;?php // stringa definita con i singoli apici $stringa1 = &amp;#39;Ciao a tutti&amp;#39;; // visualizziamo la stringa echo $stringa1; // vado a capo echo &amp;#39;&amp;lt;br&amp;gt;&amp;#39;; //stringa definita con i doppi apici $stringa2 = &amp;#34;Ciao a tutti&amp;#34;; // visualizziamo la seconda stringa echo $stringa2; ?</description></item><item><title>Variabili e costanti</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/variabili-e-costanti/</link><pubDate>Wed, 13 Jul 2005 22:31:48 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/variabili-e-costanti/</guid><description>Per capire il significato e l&amp;rsquo;utilità delle variabili risolviamo questo semplice problema di geometria: calcolare l&amp;rsquo;area di un rettangolo avente base uguale a 5 cm e l&amp;rsquo;altezza paria 3 cm. Svolgimento:
base = 5
altezza = 3
area = base x altezza
Adesso analizziamo il seguente script, che vi consiglio di provare sul vostro PC, e cerchiamo le analogie con il precedente problema:
&amp;lt;?php $base = 5; $altezza = 3; $area = $base * $altezza; echo $area; ?</description></item><item><title>echo: la prima istruzione PHP</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/echo-la-prima-istruzione-php/</link><pubDate>Wed, 13 Jul 2005 22:31:25 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/echo-la-prima-istruzione-php/</guid><description>Adesso che abbiamo imparato come si inseriscono le istruzioni PHP all&amp;rsquo;interno del codice HTML, vediamo come si risolve uno dei più comuni compiti di uno script PHP: mostrare del testo all&amp;rsquo;utente. Il comando che useremo si chiama echo. Vediamo subito un esempio:
&amp;lt;?php echo(&amp;#34;Ciao Mondo !&amp;#34;); ?&amp;gt;Probabilmente vi sarete accorti che questo comando era già presente negli script visti nelle lezioni precedenti. Questa volta però la frase da visualizzare, più propriamente chiamata stringa, è racchiusa, oltre che dalle virgolette, anche dalle parentesi tonde.</description></item><item><title>Commenti?</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/commenti/</link><pubDate>Wed, 13 Jul 2005 22:27:44 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/commenti/</guid><description>Appena avrete preso un po' di confidenza con il PHP inizierete a scrivere programmi che diventeranno sempre più potenti ed utili ma purtroppo anche più lunghi e complessi. Vi accorgerete che scrivere script di centinaia o addirittura migliaia di righe non sarà poi così difficile. Il difficile sarà invece non perdersi tra tutte quelle righe di codice e ricordare esattamente quale sia il loro scopo.
Per semplificare la lettura e la comprensione dei programmi PHP possiamo però utilizzare i commenti, ovvero delle frasi da inserire all&amp;rsquo;interno dei nostri script il cui scopo è semplicemente quello di chiarire il significato del codice vero e proprio.</description></item><item><title>PHP e HTML</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/php-e-html/</link><pubDate>Wed, 13 Jul 2005 22:27:21 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/php-e-html/</guid><description>Torniamo sul primo esempio di pagina PHP visto:
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Pagina di prova&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt;Sono le ore &amp;lt;?php echo date(&amp;#34;G.i&amp;#34;); ?&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; La colorazione del precedente codice evidenzia come il normale codice HTML subisca ad un certo punto una interruzione, causata da quello che prende il nome di tag di apertura PHP &amp;lt;?php. Similmente il codice HTML riprende subito dopo un&amp;rsquo;altra sequenza di caratteri ?&amp;gt; che costituiscono il tag di chiusura di PHP.</description></item><item><title>Cosa serve per programmare in PHP?</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/cosa-serve-per-programmare-in-php/</link><pubDate>Wed, 13 Jul 2005 22:27:03 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/cosa-serve-per-programmare-in-php/</guid><description>Prima di procedere con lo studio del linguaggio PHP è necessario predisporre il nostro computer all&amp;rsquo;esecuzione di programmi PHP, chiamati anche script PHP. Abbiamo visto infatti che tali programmi vengono eseguiti durante l&amp;rsquo;interazione tra il nostro browser ed un server web. Anche se avessimo a disposizione tale server (quelli offerti dai diversi servizi di hosting) sarebbe abbastanza scomodo dover inviare i nostri files di volta in volta, magari via FTP, per vederne i risultati.</description></item><item><title>Cos'è il PHP? Come funziona?</title><link>https://www.giovannitomasicchio.it/corsi/corso-php-base/come-funziona-php/</link><pubDate>Wed, 13 Jul 2005 22:26:13 +0000</pubDate><guid>https://www.giovannitomasicchio.it/corsi/corso-php-base/come-funziona-php/</guid><description>Se state leggendo questa pagina probabilmente avete già un&amp;rsquo;idea di che cosa sia il PHP. Allora perché soffermarsi su questo argomento prima di passare ad esaminare codice PHP vero e proprio? Perché i più diffusi errori di programmazione di chi si avvicina al PHP dipendono spesso da una comprensione approssimata della natura, del funzionamento e degli scopi di questo linguaggio.
Niente paura, affronteremo il tutto cercando di non impantanarci in trattazioni teoriche, che in questo momento potrebbero ulteriormente confondere le idee.</description></item></channel></rss>