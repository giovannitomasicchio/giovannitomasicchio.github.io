<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>URI on Giovanni Tomasicchio</title><link>https://giovanni.tomasicchio.gitlab.io/website/tags/uri/</link><description>Recent content in URI on Giovanni Tomasicchio</description><generator>Hugo -- gohugo.io</generator><language>it-IT</language><lastBuildDate>Sun, 01 Oct 2017 21:39:22 +0000</lastBuildDate><atom:link href="https://giovanni.tomasicchio.gitlab.io/website/tags/uri/index.xml" rel="self" type="application/rss+xml"/><item><title>REST, quanto costa l’infedeltà?</title><link>https://giovanni.tomasicchio.gitlab.io/website/rest-quanto-costa-infedelta/</link><pubDate>Sun, 01 Oct 2017 21:39:22 +0000</pubDate><guid>https://giovanni.tomasicchio.gitlab.io/website/rest-quanto-costa-infedelta/</guid><description>In questo ultimo post sul modello REST voglio provare a rispondere ad una semplice domanda: perché dovremmo rimanere fedeli al modello REST quando realizziamo applicazioni web?
Per farlo dobbiamo partire dagli obiettivi che questa architettura si pone:
scalabilità geografica; adozione di interfacce generiche (es.: HTTP, URI, ecc.) condivise tra tutti i client e server; deploy indipendente dei componenti (es.: siti web, web app, browser, motori di ricerca, ecc.); adozione di middleware per ridurre la latenza delle interazioni (es.</description></item></channel></rss>