<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zend Framework on Giovanni Tomasicchio</title><link>https://giovannitomasicchio.github.io/tags/zend-framework/</link><description>Recent content in Zend Framework on Giovanni Tomasicchio</description><generator>Hugo -- gohugo.io</generator><language>it-IT</language><lastBuildDate>Tue, 19 Oct 2010 20:34:51 +0000</lastBuildDate><atom:link href="https://giovannitomasicchio.github.io/tags/zend-framework/index.xml" rel="self" type="application/rss+xml"/><item><title>Utilizzare il filtro antispam di Akismet con PHP</title><link>https://giovannitomasicchio.github.io/articoli/utilizzare-il-filtro-antispam-di-akismet-con-php/</link><pubDate>Tue, 19 Oct 2010 20:34:51 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/utilizzare-il-filtro-antispam-di-akismet-con-php/</guid><description>Akismet è un servizio di filtraggio dello spam offerto dalla Automattic, l&amp;rsquo;azienda maggiormente impegnata nello sviluppo di Wordpress. In questo articolo vedremo come invocare Akismet nei nostri script PHP per ricevere una valutazione sulla bontà dei commenti inviati dagli utenti attraverso un classico form HTML.
Il servizio di filtraggio di Akismet è gratuito per utilizzo personale, previa registrazione a questo indirizzo. Completata la registrazione si riceverà via mail un codice personale che, come vedremo negli esempi tra breve, servirà per avere accesso al servizio.</description></item><item><title>Installare PHP</title><link>https://giovannitomasicchio.github.io/articoli/installare-php/</link><pubDate>Sun, 10 Oct 2010 14:31:35 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/installare-php/</guid><description>In questo articolo vedremo quali sono i metodi e gli strumenti che abbiamo a disposizione per installare PHP sul nostro computer. Prenderemo in considerazione sia i principali pacchetti software autoinstallanti, sia le procedure manuali adatte ai diversi sistemi operativi.
Zend Server Come suggerisce il nome, Zend Server nasce in casa Zend, azienda leader nel panorama PHP e principale sostenitore dello sviluppo del linguaggio. Disponibile per Windows, Linux e Mac OS X, Zend Server è adatto a preparare sia un PC di sviluppo sia un server di produzione.</description></item><item><title>Invio di email usando Zend_Mail</title><link>https://giovannitomasicchio.github.io/articoli/invio-di-email-usando-zend_mail/</link><pubDate>Mon, 06 Sep 2010 07:30:00 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/invio-di-email-usando-zend_mail/</guid><description>Questo articolo illustra come utilizzare lo Zend Framework per realizzare un form di invio email, utile ad esempio agli utenti per contattare l&amp;rsquo;amministratore del sito oppure per segnalare una pagina del sito ad amici. Zend Framework fornisce tutti gli oggetti necessari allo scopo, oggetti che possono essere usati singolarmente, al di fuori di una applicazione MVC. L&amp;rsquo;uso di un framework non deve spaventare coloro che non si sentono degli esperti nella programmazione in PHP.</description></item><item><title>Autenticare gli utenti con Zend_Auth - 2</title><link>https://giovannitomasicchio.github.io/articoli/autenticare-gli-utenti-con-zend-auth-2/</link><pubDate>Sat, 15 Sep 2007 09:29:38 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/autenticare-gli-utenti-con-zend-auth-2/</guid><description>Zend_Auth_Adapter_DbTable Nel precedente articolo abbiamo analizzato i diversi componenti che concorrono alla realizzazione del sistema di autenticazione utente presente nello Zend Framework. In particolare abbiamo visto come il controllo delle credenziali dell&amp;rsquo;utente avviene grazie ad una classe detta Adapter. Tra gli Adapter già presenti nello Zend Framework vi è Zend_Auth_Adapter_DbTable che può essere usato per confrontare lo username e la password forniti dall&amp;rsquo;utente con quelli memorizzati in una tabella di un database.</description></item><item><title>Autenticare gli utenti con Zend_Auth - 1</title><link>https://giovannitomasicchio.github.io/articoli/autenticare-gli-utenti-con-zend-auth-1/</link><pubDate>Sun, 09 Sep 2007 10:50:02 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/autenticare-gli-utenti-con-zend-auth-1/</guid><description>Introduzione L&amp;rsquo;autenticazione degli utenti è una delle funzionalità più diffuse nelle applicazioni web. Questa operazione, comunemente chiamata login, si basa sul controllo delle credenziali fornite e non deve essere confusa con la gestione delle autorizzazioni, processo con cui si stabilisce se un utente (già identificato) possiede i diritti per accedere ad una particolare risorsa.
Lo Zend Framework offre due componenti per la gestione dell&amp;rsquo;autenticazione e delle autorizzazioni, rispettivamente lo Zend_Auth e lo Zend_Acl.</description></item><item><title>Zend Framework Tutorial - 5</title><link>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-5/</link><pubDate>Sun, 29 Jul 2007 10:49:26 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-5/</guid><description>NewsController Siamo finalmente arrivati all&amp;rsquo;ultima parte di questa serie di articoli dedicati alla realizzazione di una applicazione con lo Zend Framework. Dobbiamo analizzare il funzionamento del NewsController, il cuore della nostro sito web, che si occupa della visualizzazione, inserimento, modifica e cancellazione delle news. Di seguito viene riportata la struttura del Controller che sarà analizzata in dettaglio nelle prossime pagine.
class NewsController extends Zend_Controller_Action { protected $_flashMessenger = null; public function init() { // istruzioni.</description></item><item><title>Zend Framework Tutorial - 4</title><link>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-4/</link><pubDate>Sat, 21 Jul 2007 09:28:44 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-4/</guid><description>IndexController Dopo aver analizzato la classe Model che gestisce tutta l&amp;rsquo;interazione con il database, possiamo finalmente iniziare a vedere i Controller della nostra applicazione ed i template HTML associati. Abbiamo detto che i Controller sono classi costituite da Action, metodi che vengono automaticamente richiamati dal Front Controller per svolgere una particolare funzionalità del sito, associata ad un URL richiesto dall&amp;rsquo;utente. Cosa ci aspettiamo di trovare quindi in una Action?
Generalmente una Action preleva eventuali dati presenti nella richiesta effettuata dall&amp;rsquo;utente (come i dati GET e POST), richiama uno o più Model per interagire col database e mostra il risultato del suo operato caricando (implicitamente o esplicitamente) un template a cui passa i dati dinamici da visualizzare.</description></item><item><title>Zend Framework Tutorial - 3</title><link>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-3/</link><pubDate>Sat, 14 Jul 2007 09:23:58 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-3/</guid><description>Model Poiché tutte le funzionalità del sito che stiamo realizzando fanno accesso ai dati presenti nel database, prima di realizzare i Controller del nostro progetto analizziamo il funzionamento del Model, ovvero della classe responsabile di tutte le operazioni eseguite direttamente sulla base di dati. Per realizzare il Model adotteremo il classico approccio di una applicazione PHP/MySQL basato sull&amp;rsquo;esecuzione esplicita di query attraverso lo Zend_Db_Adapter.
Il Model per la gestione delle news sarà quindi una classe con un metodo per ciascuna funzionalità fondamentale sui dati della news: getAllNews per lettura di tutte le news (per la home-page), getNewsById per lettura di una singola news (impiegata nelle pagine di visualizzazione e modifica di una singola news), insertUpdateNews per l&amp;rsquo;inserimento e la modifica e deleteNews per la cancellazione.</description></item><item><title>Zend Framework Tutorial - 2</title><link>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-2/</link><pubDate>Fri, 06 Jul 2007 23:02:11 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-2/</guid><description>Struttura del progetto Nel precedente articolo abbiamo cominciato a vedere quali sono gli elementi che costituiscono la nostra applicazione web realizzata con lo Zend Framework. Abbiamo detto che sono necessarie delle classi di tipo Controller per ciascun gruppo di funzionalità correlate, un Controller per gestire la home page (IndexController) ed un altro per la pagina di errore (ErrorController). Abbiamo detto poi che avremmo utilizzato diversi file per conservare i template HTML e uno o più classi Model per effettuare l&amp;rsquo;accesso ai dati.</description></item><item><title>Zend Framework Tutorial - 1</title><link>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-1/</link><pubDate>Sun, 01 Jul 2007 22:39:41 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-1/</guid><description>Introduzione Lo Zend Framework è una completa collezione di classi da impiegare nella realizzazione di applicazioni PHP di media e grande complessità. Ci sono classi per tutte le esigenze quindi è inutile provare a farne un elenco dettagliato e descriverne il funzionamento. Il modo migliore per scoprire lo Zend Framework è invece realizzare con esso una piccola applicazione e quindi in questo tutorial vedremo come costruire un sito web in grado di mostrare delle news, gestite dinamicamente dall&amp;rsquo;utente, e conservate in un database MySQL.</description></item><item><title>Presentazione dello Zend Framework</title><link>https://giovannitomasicchio.github.io/articoli/presentazione-dello-zend-framework/</link><pubDate>Wed, 20 Jun 2007 16:12:21 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/presentazione-dello-zend-framework/</guid><description>Introduzione Se avete maturato un po' di esperienza in PHP sapete bene come gran parte del codice di un nuovo lavoro può essere ereditato dai precedenti progetti: le funzioni per collegarsi al database, quelle per gestire i template, quelle per l&amp;rsquo;autenticazione dell&amp;rsquo;utente, ecc.. Accanto al codice da voi prodotto, forse usate anche diverse librerie di codice realizzate da terzi: Smarty per gestire i template HTML, FPDF per creare PDF, PHPMailer per inviare email complesse, ADODb per interagire con i diversi database, la miriade di classi PEAR, ecc.</description></item></channel></rss>