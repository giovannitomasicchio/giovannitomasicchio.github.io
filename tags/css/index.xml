<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSS on Giovanni Tomasicchio</title><link>https://giovannitomasicchio.github.io/tags/css/</link><description>Recent content in CSS on Giovanni Tomasicchio</description><generator>Hugo -- gohugo.io</generator><language>it-IT</language><lastBuildDate>Sat, 15 Sep 2007 09:29:38 +0000</lastBuildDate><atom:link href="https://giovannitomasicchio.github.io/tags/css/index.xml" rel="self" type="application/rss+xml"/><item><title>Autenticare gli utenti con Zend_Auth - 2</title><link>https://giovannitomasicchio.github.io/articoli/autenticare-gli-utenti-con-zend-auth-2/</link><pubDate>Sat, 15 Sep 2007 09:29:38 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/autenticare-gli-utenti-con-zend-auth-2/</guid><description>Zend_Auth_Adapter_DbTable Nel precedente articolo abbiamo analizzato i diversi componenti che concorrono alla realizzazione del sistema di autenticazione utente presente nello Zend Framework. In particolare abbiamo visto come il controllo delle credenziali dell&amp;rsquo;utente avviene grazie ad una classe detta Adapter. Tra gli Adapter già presenti nello Zend Framework vi è Zend_Auth_Adapter_DbTable che può essere usato per confrontare lo username e la password forniti dall&amp;rsquo;utente con quelli memorizzati in una tabella di un database.</description></item><item><title>Zend Framework Tutorial - 5</title><link>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-5/</link><pubDate>Sun, 29 Jul 2007 10:49:26 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-5/</guid><description>NewsController Siamo finalmente arrivati all&amp;rsquo;ultima parte di questa serie di articoli dedicati alla realizzazione di una applicazione con lo Zend Framework. Dobbiamo analizzare il funzionamento del NewsController, il cuore della nostro sito web, che si occupa della visualizzazione, inserimento, modifica e cancellazione delle news. Di seguito viene riportata la struttura del Controller che sarà analizzata in dettaglio nelle prossime pagine.
class NewsController extends Zend_Controller_Action { protected $_flashMessenger = null; public function init() { // istruzioni.</description></item><item><title>Zend Framework Tutorial - 4</title><link>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-4/</link><pubDate>Sat, 21 Jul 2007 09:28:44 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-4/</guid><description>IndexController Dopo aver analizzato la classe Model che gestisce tutta l&amp;rsquo;interazione con il database, possiamo finalmente iniziare a vedere i Controller della nostra applicazione ed i template HTML associati. Abbiamo detto che i Controller sono classi costituite da Action, metodi che vengono automaticamente richiamati dal Front Controller per svolgere una particolare funzionalità del sito, associata ad un URL richiesto dall&amp;rsquo;utente. Cosa ci aspettiamo di trovare quindi in una Action?
Generalmente una Action preleva eventuali dati presenti nella richiesta effettuata dall&amp;rsquo;utente (come i dati GET e POST), richiama uno o più Model per interagire col database e mostra il risultato del suo operato caricando (implicitamente o esplicitamente) un template a cui passa i dati dinamici da visualizzare.</description></item><item><title>Zend Framework Tutorial - 2</title><link>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-2/</link><pubDate>Fri, 06 Jul 2007 23:02:11 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/zend-framework-tutorial-2/</guid><description>Struttura del progetto Nel precedente articolo abbiamo cominciato a vedere quali sono gli elementi che costituiscono la nostra applicazione web realizzata con lo Zend Framework. Abbiamo detto che sono necessarie delle classi di tipo Controller per ciascun gruppo di funzionalità correlate, un Controller per gestire la home page (IndexController) ed un altro per la pagina di errore (ErrorController). Abbiamo detto poi che avremmo utilizzato diversi file per conservare i template HTML e uno o più classi Model per effettuare l&amp;rsquo;accesso ai dati.</description></item><item><title>AJAX in pratica</title><link>https://giovannitomasicchio.github.io/articoli/ajax-in-pratica/</link><pubDate>Fri, 29 Jul 2005 18:55:45 +0000</pubDate><guid>https://giovannitomasicchio.github.io/articoli/ajax-in-pratica/</guid><description>Il termine AJAX sta per Asynchronous JavaScript and XML ed indica una tecnica per la realizzazione di applicazioni web estremamente interattive. Si basa sulla possibilità di modificare l&amp;rsquo;HTML o il CSS di una pagina web attraverso l&amp;rsquo;uso di Javascript (DHTML) a seguito di una interrogazione del server web.
Una tradizionale applicazione web prevede la costruzione di una pagina a seguito di ogni interrogazione del web server: l&amp;rsquo;utente richiede una pagina ed il server la invia al browser.</description></item></channel></rss>