<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OOP on Giovanni Tomasicchio</title><link>https://www.giovannitomasicchio.it/tags/oop/</link><description>Recent content in OOP on Giovanni Tomasicchio</description><generator>Hugo -- gohugo.io</generator><language>it-IT</language><lastBuildDate>Fri, 15 Sep 2017 20:24:56 +0000</lastBuildDate><atom:link href="https://www.giovannitomasicchio.it/tags/oop/index.xml" rel="self" type="application/rss+xml"/><item><title>Ereditarietà, solo per (sviluppatori) adulti</title><link>https://www.giovannitomasicchio.it/ereditarieta-solo-sviluppatori-adulti/</link><pubDate>Fri, 15 Sep 2017 20:24:56 +0000</pubDate><guid>https://www.giovannitomasicchio.it/ereditarieta-solo-sviluppatori-adulti/</guid><description>Visto l’interesse suscitato dal precedente post sulla relazione di ereditarietà, torno sull’argomento per mettere in risalto ulteriori vincoli da essa imposti.
Lo so, a volte anche le costrizioni possono risultare piacevoli… ed è proprio quello che accade con l’ereditarietà tra classi, certamente vincolante ma così immediata nel realizzare il riuso del codice. E allora, per allontanare questi pensieri impuri dai nostri progetti, recitiamo insieme la seguente preghiera tratta da uno dei testi sacri della programmazione ad oggetti:</description></item><item><title>Ereditarietà, usarla con cautela</title><link>https://www.giovannitomasicchio.it/ereditarieta-usarla-con-cautela/</link><pubDate>Fri, 08 Sep 2017 18:07:24 +0000</pubDate><guid>https://www.giovannitomasicchio.it/ereditarieta-usarla-con-cautela/</guid><description>In questo post voglio condividere alcune osservazioni sulle caratteristiche della relazione di ereditarietà nella programmazione object-oriented. Provo a farlo con un esempio.
Dobbiamo individuare il modello delle classi per una applicazione che gestisca l’archivio dei film di una videoteca. Per ciascun film dobbiamo memorizzare il regista e gli attori. Viene immediato individuare almeno tre classi: Film, Regista e Attore, collegate nel seguente modo:
Diagramma 1 Poiché dobbiamo realizzare delle funzionalità che operano sia sugli attori che sui registi, come ad esempio il motore di ricerca degli artisti, abbiamo bisogno del polimorfismo e quindi introduciamo una classe Artista.</description></item><item><title>Presentazione dello Zend Framework</title><link>https://www.giovannitomasicchio.it/articoli/presentazione-dello-zend-framework/</link><pubDate>Wed, 20 Jun 2007 16:12:21 +0000</pubDate><guid>https://www.giovannitomasicchio.it/articoli/presentazione-dello-zend-framework/</guid><description>Introduzione Se avete maturato un po' di esperienza in PHP sapete bene come gran parte del codice di un nuovo lavoro può essere ereditato dai precedenti progetti: le funzioni per collegarsi al database, quelle per gestire i template, quelle per l&amp;rsquo;autenticazione dell&amp;rsquo;utente, ecc.. Accanto al codice da voi prodotto, forse usate anche diverse librerie di codice realizzate da terzi: Smarty per gestire i template HTML, FPDF per creare PDF, PHPMailer per inviare email complesse, ADODb per interagire con i diversi database, la miriade di classi PEAR, ecc.</description></item><item><title>Installare Apache 2.2, PHP 5.2 e MySQL 5 su Windows</title><link>https://www.giovannitomasicchio.it/articoli/installare-apache-22-php-52-e-mysql-5-su-windows/</link><pubDate>Tue, 05 Dec 2006 08:45:52 +0000</pubDate><guid>https://www.giovannitomasicchio.it/articoli/installare-apache-22-php-52-e-mysql-5-su-windows/</guid><description>Introduzione In questo tutorial mostreremo in dettaglio le procedure di installazione e configurazione di Apache 2.2, PHP 5.2 e MySQL 5 su Windows 2000/XP.
Il nostro scopo principale è quello di ottenere una piattaforma di sviluppo per poter realizzare e testare le nostre applicazioni PHP-MySQL.
Abbiamo preso in considerazione le versioni più recenti dei vari software così da poterne sperimentare le caratteristiche e novità, alcune delle quali saranno evidenti già in fase di installazione.</description></item><item><title>L'estensione mysqli - I</title><link>https://www.giovannitomasicchio.it/articoli/lestensione-mysqli-i/</link><pubDate>Sat, 12 Mar 2005 09:55:33 +0000</pubDate><guid>https://www.giovannitomasicchio.it/articoli/lestensione-mysqli-i/</guid><description>Dopo anni di onorato servizio l&amp;rsquo;estensione ext/mysql esce di scena lasciando il compito di permettere l&amp;rsquo;interazione tra PHP e MySQL alla nuova estensione ext/mysqli.
Georg Richter, il responsabile dello sviluppo di questa libreria, ha affermato in una intervista che il codice di ext/mysql, a causa delle continue modifiche ed aggiornamenti subiti nel corso degli anni, era diventato praticamente illeggibile e ciò ha reso la sua manutenzione sempre più difficile.
E' stato necessario riscrivere questa estensione anche a causa delle numerose caratteristiche del nuovo MySQL 4.</description></item></channel></rss>