<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>domain event on Giovanni Tomasicchio</title><link>https://www.giovannitomasicchio.it/tags/domain-event/</link><description>Recent content in domain event on Giovanni Tomasicchio</description><generator>Hugo -- gohugo.io</generator><language>it-IT</language><lastBuildDate>Tue, 02 Jan 2018 15:50:26 +0000</lastBuildDate><atom:link href="https://www.giovannitomasicchio.it/tags/domain-event/index.xml" rel="self" type="application/rss+xml"/><item><title>CAP, ACID, BASE e Eventual Consistency</title><link>https://www.giovannitomasicchio.it/cap-acid-base-eventual-consistency/</link><pubDate>Tue, 02 Jan 2018 15:50:26 +0000</pubDate><guid>https://www.giovannitomasicchio.it/cap-acid-base-eventual-consistency/</guid><description>Per chi è abituato a lavorare con sistemi centralizzati, costituiti ad esempio da una applicazione monolitica dotata di un unico database relazionale, la realizzazione di un sistema distribuito si presenta ricca di insidie. Ne facevo cenno già in un precedente post in cui cercavo di far luce sui problemi che l’astrazione offerta dai moderni strumenti riesce a nascondere ma non a risolvere del tutto. Uno di questi problemi è legato al concetto di consistenza dei dati sparsi in un sistema distribuito.</description></item><item><title>Eventi di dominio in Spring framework</title><link>https://www.giovannitomasicchio.it/eventi-dominio-spring-framework/</link><pubDate>Sat, 16 Dec 2017 16:22:54 +0000</pubDate><guid>https://www.giovannitomasicchio.it/eventi-dominio-spring-framework/</guid><description>Qualche giorno fa un collega mi ha chiesto consigli su come disaccoppiare il codice che gestisce la logica di business dal codice che produce eventuali “reazioni” del sistema all’operazione eseguita. La sua necessità sorgeva dal fatto che l’applicazione su cui sta lavorando, realizzata con Spring framework, sarebbe stata utilizzata da diversi clienti, ciascuno dei quali avrebbe potenzialmente richiesto, per la medesima operazione principale, l’esecuzione di differenti operazioni secondarie. Una soluzione a questo problema è l’introduzione nel sistema degli eventi di dominio.</description></item></channel></rss>