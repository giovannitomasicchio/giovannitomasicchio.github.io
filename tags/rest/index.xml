<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>REST on Giovanni Tomasicchio</title><link>https://www.giovannitomasicchio.it/tags/rest/</link><description>Recent content in REST on Giovanni Tomasicchio</description><generator>Hugo -- gohugo.io</generator><language>it-IT</language><lastBuildDate>Sun, 01 Oct 2017 21:39:22 +0000</lastBuildDate><atom:link href="https://www.giovannitomasicchio.it/tags/rest/index.xml" rel="self" type="application/rss+xml"/><item><title>REST, quanto costa l’infedeltà?</title><link>https://www.giovannitomasicchio.it/rest-quanto-costa-infedelta/</link><pubDate>Sun, 01 Oct 2017 21:39:22 +0000</pubDate><guid>https://www.giovannitomasicchio.it/rest-quanto-costa-infedelta/</guid><description>In questo ultimo post sul modello REST voglio provare a rispondere ad una semplice domanda: perché dovremmo rimanere fedeli al modello REST quando realizziamo applicazioni web?
Per farlo dobbiamo partire dagli obiettivi che questa architettura si pone:
scalabilità geografica; adozione di interfacce generiche (es.: HTTP, URI, ecc.) condivise tra tutti i client e server; deploy indipendente dei componenti (es.: siti web, web app, browser, motori di ricerca, ecc.); adozione di middleware per ridurre la latenza delle interazioni (es.</description></item><item><title>REST, applicazione al Web ed ai servizi RESTful</title><link>https://www.giovannitomasicchio.it/rest-applicazione-al-web-ed-ai-servizi-restful/</link><pubDate>Sat, 23 Sep 2017 14:44:32 +0000</pubDate><guid>https://www.giovannitomasicchio.it/rest-applicazione-al-web-ed-ai-servizi-restful/</guid><description>Nel precedente post vi ho raccontato delle vicende che hanno portato alla definizione del modello REST. Non è il caso di entrare nel merito della descrizione, piuttosto formale, che ne fa l’autore nella sua tesi di dottorato. Vediamo invece quali sono i concetti chiave di questa architettura e come questi siano riscontrabili nel Web e più di recente abbiano ispirato i servizi RESTful*.
Risorse e identificativi Nel modello REST si parla di risorse e dei relativi identificativi, che corrispondono nel Web ai documenti (html, jpg, css, ecc.</description></item><item><title>Architettura REST, le origini</title><link>https://www.giovannitomasicchio.it/architettura-rest-le-origini/</link><pubDate>Mon, 18 Sep 2017 06:45:49 +0000</pubDate><guid>https://www.giovannitomasicchio.it/architettura-rest-le-origini/</guid><description>Chiacchierando tra colleghi mi sono accorto che chi viene dal mondo SOAP e si avvicina ai servizi RESTful commette spesso l’errore di pensare che la principale differenza tra i due approcci sia solo la notazione utilizzata per lo scambio dei dati, XML per i servizi SOAP e JSON per quelli RESTful. Per avere un’idea più corretta sui concetti alla base di questi servizi è necessario fare un salto nel passato e seguire la nascita del Web per come lo conosciamo adesso.</description></item></channel></rss>